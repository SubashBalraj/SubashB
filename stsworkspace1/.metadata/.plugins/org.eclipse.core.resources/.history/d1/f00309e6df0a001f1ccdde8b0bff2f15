package com.abc.adminservice.controller;

import com.abc.adminservice.entity.Admin;
import com.abc.adminservice.model.CabDetails;
import com.abc.adminservice.model.CustomerDetails;
import com.abc.adminservice.model.TripBookingDetails;
import com.abc.adminservice.service.AdminService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/admins")
public class AdminController {

    @Autowired
    private AdminService adminService;

    @GetMapping("/all")
    public List<Admin> getAllAdmins() {
        return adminService.getAllAdmins();
    }

    @GetMapping("/{id}")
    public ResponseEntity<Admin> getAdminById(@PathVariable("id") int adminId) {
        Admin admin = adminService.getAdminById(adminId);
        return ResponseEntity.ok(admin);
    }

    @PostMapping("/save")
    public ResponseEntity<Admin> createAdmin(@RequestBody Admin admin) {
        Admin createdAdmin = adminService.createAdmin(admin);
        return ResponseEntity.status(HttpStatus.CREATED).body(createdAdmin);
    }

    @PutMapping("/{id}/update")
    public ResponseEntity<Admin> updateAdmin(@PathVariable("id") int adminId, @RequestBody Admin admin) {
        Admin updatedAdmin = adminService.updateAdmin(adminId, admin);
        return ResponseEntity.ok(updatedAdmin);
    }

    @DeleteMapping("/{id}/delete")
    public ResponseEntity<Void> deleteAdmin(@PathVariable("id") int adminId) {
        adminService.deleteAdmin(adminId);
        return ResponseEntity.noContent().build();
    }

    @GetMapping("/cab/details")
    public ResponseEntity<List<CabDetails>> getCabDetails() {
        return ResponseEntity.status(HttpStatus.OK).body(adminService.getCabDetails());
    }
    
    @GetMapping("/booking/details")
    public ResponseEntity<List<TripBookingDetails>> getTripBookingDetails() {
        return ResponseEntity.status(HttpStatus.OK).body(adminService.getTripBookingDetails());
    }
    
    @GetMapping("/customer/details")
    public ResponseEntity<List<CustomerDetails>> getCustomerDetails() {
        return ResponseEntity.status(HttpStatus.OK).body(adminService.getCustomerDetails());
    }
}
