package com.abc.cabservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.PutMapping;

import com.abc.cabservice.entity.Cab;
import com.abc.cabservice.service.CabService;

@RestController
@RequestMapping("/cabs")
public class CabController {

    @Autowired
    private CabService cabService;

    @GetMapping("/all")
    public ResponseEntity<List<Cab>> getAllCabs() {
        List<Cab> cabs = cabService.getAllCabs();
        return ResponseEntity.ok(cabs);
    }

    @GetMapping("/{Id}")
    public ResponseEntity<Cab> getCabById(@PathVariable Integer cabId) {
        Cab cab = cabService.getCabById(cabId);
        if (cab != null) {
            return ResponseEntity.ok(cab);
        } else {
            return ResponseEntity.notFound().build();
        }
    }

    @PostMapping("/save")
    public ResponseEntity<Cab> addCab(@RequestBody Cab cab) {
        Cab addedCab = cabService.addCab(cab);
        return ResponseEntity.status(HttpStatus.CREATED).body(addedCab);
    }
    
    @PutMapping("/{Id}/update")
    public ResponseEntity<Cab> updateCab(@PathVariable Integer cabId, @RequestBody Cab cab) {
        Cab updatedCab = cabService.updateCab(cabId, cab);
        if (updatedCab != null) {
            return ResponseEntity.ok(updatedCab);
        } else {
            return ResponseEntity.notFound().build();
        }
    }
    
    @DeleteMapping("/{Id}/delete")
    public ResponseEntity<Void> deleteCab(@PathVariable Integer cabId) {
        cabService.deleteCab(cabId);
        return ResponseEntity.noContent().build();
    }
}

