package com.abc.customerservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.abc.customerservice.entity.Customer;
import com.abc.customerservice.exception.ResourceNotFoundException;
import com.abc.customerservice.service.CustomerService;

@RestController
@RequestMapping("/customers")
public class CustomerController {

	 @Autowired
	    private CustomerService customerService;

	    @GetMapping("/all")
	    public ResponseEntity<List<Customer>> getAllCustomers() {
	        List<Customer> customers = customerService.getAllCustomers();
	        return ResponseEntity.ok(customers);
	    }

	    @GetMapping("/{customerId}")
	    public ResponseEntity<Customer> getCustomerById(@PathVariable int customerId) {
	        Customer customer = customerService.getCustomerById(customerId);
	        if (customer != null) {
	            return ResponseEntity.ok(customer);
	        } else {
	            throw new ResourceNotFoundException("Customer not found with ID: " + customerId);
	        }
	    }

	    @PostMapping("/save")
	    public ResponseEntity<Customer> addCustomer(@RequestBody Customer customer) {
	        Customer addedCustomer = customerService.addCustomer(customer);
	        return ResponseEntity.status(HttpStatus.CREATED).body(addedCustomer);
	    }

	    @PutMapping("/{customerId}/update")
	    public ResponseEntity<Customer> updateCustomer(@PathVariable int customerId, @RequestBody Customer updatedCustomer) {
	        Customer customer = customerService.updateCustomer(customerId, updatedCustomer);
	        if (customer != null) {
	            return ResponseEntity.ok(customer);
	        } else {
	            throw new ResourceNotFoundException("Customer not found with ID: " + customerId);
	        }
	    }

	    @DeleteMapping("/{customerId}/delete")
	    public ResponseEntity<Void> deleteCustomer(@PathVariable int customerId) {
	        customerService.deleteCustomer(customerId);
	        return ResponseEntity.noContent().build();
	    }

	    @ExceptionHandler(ResourceNotFoundException.class)
	    @ResponseStatus(HttpStatus.NOT_FOUND)
	    public ResponseEntity<String> handleResourceNotFoundException(ResourceNotFoundException ex) {
	        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());
	    }
	}