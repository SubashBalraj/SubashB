package com.abc.driverservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.abc.driverservice.entity.Driver;
import com.abc.driverservice.service.DriverService;

@RestController
@RequestMapping("/drivers")
public class DriverController {

    @Autowired
    private DriverService driverService;

    @GetMapping("/all")
    public ResponseEntity<List<Driver>> getAllDrivers() {
        List<Driver> drivers = driverService.getAllDrivers();
        return ResponseEntity.ok(drivers);
    }

    @GetMapping("/{driverId}")
    public ResponseEntity<Driver> getDriverById(@PathVariable int driverId) {
        Driver driver = driverService.getDriverById(driverId);
        if (driver != null) {
            return ResponseEntity.ok(driver);
        } else {
            return ResponseEntity.notFound().build();
        }
    }

    @PostMapping("/save")
    public ResponseEntity<Driver> addDriver(@RequestBody Driver driver) {
        Driver addedDriver = driverService.addDriver(driver);
        return ResponseEntity.status(HttpStatus.CREATED).body(addedDriver);
    }

    @PutMapping("/{driverId}/update")
    public ResponseEntity<Driver> updateDriver(@PathVariable int driverId, @RequestBody Driver updatedDriver) {
        Driver driver = driverService.updateDriver(driverId, updatedDriver);
        if (driver != null) {
            return ResponseEntity.ok(driver);
        } else {
            return ResponseEntity.notFound().build();
        }
    }

    @DeleteMapping("/{driverId}/delete")
    public ResponseEntity<Void> deleteDriver(@PathVariable int driverId) {
        driverService.deleteDriver(driverId);
        return ResponseEntity.noContent().build();
    }
}

